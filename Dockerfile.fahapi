FROM python:3.10-slim-bookworm AS builder

RUN pip install --no-cache-dir uv

WORKDIR /app

# Create and activate virtual environment
RUN uv venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Set UV environment variables for better caching and bytecode compilation
ENV UV_COMPILE_BYTECODE=1

# Copy requirements first to leverage Docker cache
COPY requirements.txt .

# Install Python dependencies using uv, with cache mount for speed
RUN --mount=type=cache,target=/root/.cache/uv     uv pip install --no-cache-dir -r requirements.txt

# Install system dependencies required for file processing
RUN apt-get update     && apt-get install -y --no-install-recommends          poppler-utils          tesseract-ocr          tesseract-ocr-eng          tesseract-ocr-spa     && apt-get clean     && rm -rf /var/lib/apt/lists/*

# Copy the source code
COPY ./src ./src


FROM python:3.10-slim-bookworm AS final

WORKDIR /app

# Create a non-root user for security
ENV APP_USER=appuser
RUN groupadd -r ${APP_USER} && useradd --no-log-init -r -g ${APP_USER} ${APP_USER}

# Copy virtual environment from builder stage
COPY --from=builder /opt/venv /opt/venv

# Copy source code from builder stage and set ownership
COPY --from=builder --chown=${APP_USER}:${APP_USER} /app/src ./src

# Set PYTHONPATH to include the app directory
ENV PYTHONPATH=/app

# Add virtual environment to PATH
ENV PATH="/opt/venv/bin:$PATH"

# Create data directories and set ownership before switching to appuser
# These directories are crucial for application functionality (e.g., downloads, markdown files)
RUN mkdir -p /app/data/downloads &&     mkdir -p /app/data/markdown_files &&     chown -R ${APP_USER}:${APP_USER} /app/data

# Switch to non-root user
USER ${APP_USER}

# Expose the port the FastAPI app will run on
EXPOSE 8000

# Command to run the FastAPI application using Uvicorn
# Using src.entrenai.api.main:app based on typical project structure
# Listening on 0.0.0.0 to be accessible from outside the container
CMD ["uvicorn", "src.entrenai.api.main:app", "--host", "0.0.0.0", "--port", "8000"]
